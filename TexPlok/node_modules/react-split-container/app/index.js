import React from 'react'
import Component from 'react-class'
import { render } from 'react-dom'
import { Flex, Item as FlexItem } from 'react-flex'
import SplitContainer, { Splitter, Side } from 'react-split-container'
import '../style/index.scss'
import '../style/theme/default/index.scss'

import assign from 'object-assign'

let SPLIT_AT      = 100
let SPLITTER_SIZE = 20
let FIXED_INDEX   = 1
let HORIZ         = true

let COLLAPSED_INDEX = -1


const prefixFlexGrow = (value) => {
  return {
    WebkitBoxFlex: value,
    WebkitFlexGrow: value,
    MozFlexGrow: value,
    MsFlexPositive: value,
    flexGrow: value
  }
}

export default class App extends Component {
  constructor(props){
    super(props)

    this.state = {}
  }

  handleDrop(splitAt){
    console.log(splitAt)
    SPLIT_AT = splitAt

    this.setState({})
  }

  handleSplitterSizeChange(event){
    SPLITTER_SIZE = event.target.value
    this.setState({})
  }

  handleFixedIndexChange(event){
    FIXED_INDEX = event.target.value
    this.setState({})
  }

  handleSplitAtChange(event){
    SPLIT_AT = event.target.value
    this.setState({})
  }

  handleClick(){
    this.setState({})
  }

  handleExpand(index){

    COLLAPSED_INDEX = null
    this.setState({})
  }

  handleCollapse(index){
    COLLAPSED_INDEX = index

    this.setState({})
  }

  key(e){
    console.log(e.key)
  }

  render() {

    const splitterStyle = {
      background: 'white',
      border: '2px solid red'
    }

    if (HORIZ){
      // splitterStyle.height = SPLITTER_SIZE
    } else {
      // splitterStyle.width = SPLITTER_SIZE
    }

    return <div>

      <label>Horizontal</label>
      <input type="checkbox" checked={HORIZ} onChange={this.onCheck}  />

      <Flex row>
        <FlexItem style={assign({border: '2px solid red'}, HORIZ? prefixFlexGrow(20): { minWidth: 200})}>
        </FlexItem>

        <FlexItem flexGrow={20} style={{border: '10px solid blue'}}>
          second
        </FlexItem>
      </Flex>

      <br />

      <label>Splitter size</label>
      <input value={SPLITTER_SIZE} onChange={this.handleSplitterSizeChange} onKeyDown={this.key}/>

      <br />

      <label>Split at</label>
      <input value={SPLIT_AT} onChange={this.handleSplitAtChange}/>

      <br />

      <label>Fixed index</label>
      <input value={FIXED_INDEX} onChange={this.handleFixedIndexChange}/>

      <SplitContainer
        transition
        orientation="vertical"
        defaultSplitAt={'auto'}
        style={{height: 400, marginBottom: 20}}
      >
        <Side style={{background: 'pink', padding: 10}}>
          <ul style={{display: 'inline-block'}}>
            <li>First menu item</li>
            <li>Second menu item</li>
          </ul>
        </Side>
        <Side style={{background: '#00A6E8', padding: 10}}>
          Content comes here.

          This SplitContainer is created with <b>splitAt: 'auto'</b> - so the splitter is set to accomodate the size of the first side of the splitter.
        </Side>
      </SplitContainer>
      <br />
      <SplitContainer
        transitionDuration='1s'
        style={{maxHeight: 500, height: 500}}
        defaultSplitAt={'100'}
        defaultCollapsedIndex={-1}
        orientation={HORIZ? 'horizontal': 'vertical'}

      >
      <Side style={{background: 'red'}}>
        <div style={{width: 100}}>Lorem ipsum Mollit reprehenderit est esse dolore est deserunt ex consequat in qui dolor sint nulla fugiat elit voluptate in do occaecat officia quis reprehenderit Ut tempor mollitanim.</div>
      </Side>
      <div>aaa</div>
      </SplitContainer>


    </div>
  }

  onCheck(event){
    var checked = event.target.checked
    HORIZ = checked
    console.log(checked)

    this.setState({})
  }
}
